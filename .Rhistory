# full axis labels
{
par(mfrow = c(3, 3))
plot(Cs[1:nSim], v, xlab = "Stimulus Distinctness", ylab = "Drift Rate")
plot(hs[1:nSim], v, xlab = "Detection Box Size", ylab = "Drift Rate")
plot(Ters[1:nSim], v, xlab = "Non-decision Time", ylab = "Drift Rate")
plot(Cs[1:nSim], a, xlab = "Stimulus Distinctness", ylab = "Boundary Seperation")
plot(hs[1:nSim], a, xlab = "Detection Box Size", ylab = "Boundary Seperation")
plot(Ters[1:nSim], a, xlab = "Non-decision Time", ylab = "Boundary Seperation")
plot(Cs[1:nSim], t0, xlab = "Stimulus Distinctness", ylab = "Non-decision Time")
plot(hs[1:nSim], t0, xlab = "Detection Box Size", ylab = "Non-decision Time")
plot(Ters[1:nSim], t0, xlab = "Non-decision Time", ylab = "Non-decision Time")
}
# grid uniform initialization of C, Ter, and h
nSim <- 30
v
# full axis labels
{
par(mfrow = c(3, 3))
plot(Cs[1:nSim], v, xlab = "Stimulus Distinctness", ylab = "Drift Rate")
plot(hs[1:nSim], v, xlab = "Detection Box Size", ylab = "Drift Rate")
plot(Ters[1:nSim], v, xlab = "Non-decision Time", ylab = "Drift Rate")
plot(Cs[1:nSim], a, xlab = "Stimulus Distinctness", ylab = "Boundary Seperation")
plot(hs[1:nSim], a, xlab = "Detection Box Size", ylab = "Boundary Seperation")
plot(Ters[1:nSim], a, xlab = "Non-decision Time", ylab = "Boundary Seperation")
plot(Cs[1:nSim], t0, xlab = "Stimulus Distinctness", ylab = "Non-decision Time")
plot(hs[1:nSim], t0, xlab = "Detection Box Size", ylab = "Non-decision Time")
plot(Ters[1:nSim], t0, xlab = "Non-decision Time", ylab = "Non-decision Time")
}
nSim
Cs
plot(Cs[1:nSim], a, xlab = "Stimulus Distinctness", ylab = "Boundary Seperation")
a
# grid uniform initialization of C, Ter, and h
nSim <- 30
n_trials <- 250
a <-c()
v <- c()
t0 <- c()
Cs <- runif(nSim,0.01,1)
hs <- runif(nSim,0.2,0.6)
Ters <- runif(nSim,0.2,0.8)
plot(0,0, xlim = c(0,1), ylim = c(0,15), col = "white",
xlab = "Stimulus Distinctness", ylab = "Drift Rate")
for (i in 1:nSim){
cat("simulation trial", i, ". ")
start_time <- Sys.time()
DDM_fit_results <- IDM_DDM(n_trials = n_trials, C=Cs[i], Ter=Ters[i], h=hs[i], D = 0.05, mode = "Euler-Maruyama")
DDM_fit_params <- DDM_fit_results$par
if(DDM_fit_results$convergence == 0){
points(Cs[i], DDM_fit_params["v"]) # plot one point to see online pattern
a <- c(a, as.numeric(DDM_fit_params["a"]))
v <- c(v, as.numeric(DDM_fit_params["v"]))
t0 <- c(t0, as.numeric(DDM_fit_params["t0"]))
}else if(DDM_fit_results$convergence != 0){
print("Failed convergence")
}
print(Sys.time() - start_time)
}
for (i in 1:nSim){
cat("simulation trial", i, ". ")
start_time <- Sys.time()
DDM_fit_results <- IDM_DDM(n_trials = n_trials, C=Cs[i], Ter=Ters[i], h=hs[i], D = 0.05, mode = "Euler-Maruyama")
DDM_fit_params <- DDM_fit_results$par
if(DDM_fit_results$convergence == 0){
points(Cs[i], DDM_fit_params["v"]) # plot one point to see online pattern
a <- c(a, as.numeric(DDM_fit_params["a"]))
v <- c(v, as.numeric(DDM_fit_params["v"]))
t0 <- c(t0, as.numeric(DDM_fit_params["t0"]))
}else if(DDM_fit_results$convergence != 0){
print("Failed convergence")
}
print(Sys.time() - start_time)
}
for (i in 1:nSim){
cat("simulation trial", i, ". ")
start_time <- Sys.time()
DDM_fit_results <- IDM_DDM(n_trials = n_trials, C=Cs[i], Ter=Ters[i], h=hs[i], D = 0.05, mode = "Euler-Maruyama")
DDM_fit_params <- DDM_fit_results$par
if(DDM_fit_results$convergence == 0){
points(Cs[i], DDM_fit_params["v"]) # plot one point to see online pattern
a <- c(a, as.numeric(DDM_fit_params["a"]))
v <- c(v, as.numeric(DDM_fit_params["v"]))
t0 <- c(t0, as.numeric(DDM_fit_params["t0"]))
}else if(DDM_fit_results$convergence != 0){
print("Failed convergence")
}
print(Sys.time() - start_time)
}
plot(0,0, xlim = c(0,1), ylim = c(0,15), col = "white",
xlab = "Stimulus Distinctness", ylab = "Drift Rate")
for (i in 1:nSim){
cat("simulation trial", i, ". ")
start_time <- Sys.time()
DDM_fit_results <- IDM_DDM(n_trials = n_trials, C=Cs[i], Ter=Ters[i], h=hs[i], D = 0.05, mode = "Euler-Maruyama")
DDM_fit_params <- DDM_fit_results$par
if(DDM_fit_results$convergence == 0){
points(Cs[i], DDM_fit_params["v"]) # plot one point to see online pattern
a <- c(a, as.numeric(DDM_fit_params["a"]))
v <- c(v, as.numeric(DDM_fit_params["v"]))
t0 <- c(t0, as.numeric(DDM_fit_params["t0"]))
}else if(DDM_fit_results$convergence != 0){
print("Failed convergence")
}
print(Sys.time() - start_time)
}
# full axis labels
{
par(mfrow = c(3, 3))
plot(Cs[1:nSim], v, xlab = "Stimulus Distinctness", ylab = "Drift Rate")
plot(hs[1:nSim], v, xlab = "Detection Box Size", ylab = "Drift Rate")
plot(Ters[1:nSim], v, xlab = "Non-decision Time", ylab = "Drift Rate")
plot(Cs[1:nSim], a, xlab = "Stimulus Distinctness", ylab = "Boundary Seperation")
plot(hs[1:nSim], a, xlab = "Detection Box Size", ylab = "Boundary Seperation")
plot(Ters[1:nSim], a, xlab = "Non-decision Time", ylab = "Boundary Seperation")
plot(Cs[1:nSim], t0, xlab = "Stimulus Distinctness", ylab = "Non-decision Time")
plot(hs[1:nSim], t0, xlab = "Detection Box Size", ylab = "Non-decision Time")
plot(Ters[1:nSim], t0, xlab = "Non-decision Time", ylab = "Non-decision Time")
}
plot(Cs[1:nSim], v, xlab = "Stimulus Distinctness", ylab = "Drift Rate")
v
Cs
# grid uniform initialization of C, Ter, and h
nSim <- 30
n_trials <- 250
a <-c()
v <- c()
t0 <- c()
Cs <- runif(nSim,0.01,1)
hs <- runif(nSim,0.2,0.6)
Ters <- runif(nSim,0.2,0.8)
plot(0,0, xlim = c(0,1), ylim = c(0,15), col = "white",
xlab = "Stimulus Distinctness", ylab = "Drift Rate")
for (i in 1:nSim){
cat("simulation trial", i, ". ")
start_time <- Sys.time()
DDM_fit_results <- IDM_DDM(n_trials = n_trials, C=Cs[i], Ter=Ters[i], h=hs[i], D = 0.05, mode = "Euler-Maruyama")
DDM_fit_params <- DDM_fit_results$par
if(DDM_fit_results$convergence == 0){
points(Cs[i], DDM_fit_params["v"]) # plot one point to see online pattern
a <- c(a, as.numeric(DDM_fit_params["a"]))
v <- c(v, as.numeric(DDM_fit_params["v"]))
t0 <- c(t0, as.numeric(DDM_fit_params["t0"]))
}else if(DDM_fit_results$convergence != 0){
print("Failed convergence")
}
print(Sys.time() - start_time)
}
# full axis labels
{
par(mfrow = c(3, 3))
plot(Cs[1:nSim], v, xlab = "Stimulus Distinctness", ylab = "Drift Rate")
plot(hs[1:nSim], v, xlab = "Detection Box Size", ylab = "Drift Rate")
plot(Ters[1:nSim], v, xlab = "Non-decision Time", ylab = "Drift Rate")
plot(Cs[1:nSim], a, xlab = "Stimulus Distinctness", ylab = "Boundary Seperation")
plot(hs[1:nSim], a, xlab = "Detection Box Size", ylab = "Boundary Seperation")
plot(Ters[1:nSim], a, xlab = "Non-decision Time", ylab = "Boundary Seperation")
plot(Cs[1:nSim], t0, xlab = "Stimulus Distinctness", ylab = "Non-decision Time")
plot(hs[1:nSim], t0, xlab = "Detection Box Size", ylab = "Non-decision Time")
plot(Ters[1:nSim], t0, xlab = "Non-decision Time", ylab = "Non-decision Time")
}
# grid uniform initialization of C, Ter, and h
nSim <- 30
n_trials <- 250
a <-c()
v <- c()
t0 <- c()
Cs <- runif(nSim,0.01,1)
hs <- runif(nSim,0.2,0.6)
Ters <- runif(nSim,0.2,0.8)
plot(0,0, xlim = c(0,1), ylim = c(0,15), col = "white",
xlab = "Stimulus Distinctness", ylab = "Drift Rate")
for (i in 1:nSim){
cat("simulation trial", i, ". ")
start_time <- Sys.time()
DDM_fit_results <- IDM_DDM(n_trials = n_trials, C=Cs[i], Ter=Ters[i], h=hs[i], D = 0.05, mode = "Euler-Maruyama")
DDM_fit_params <- DDM_fit_results$par
if(DDM_fit_results$convergence == 0){
points(Cs[i], DDM_fit_params["v"]) # plot one point to see online pattern
a <- c(a, as.numeric(DDM_fit_params["a"]))
v <- c(v, as.numeric(DDM_fit_params["v"]))
t0 <- c(t0, as.numeric(DDM_fit_params["t0"]))
}else if(DDM_fit_results$convergence != 0){
print("Failed convergence")
}
print(Sys.time() - start_time)
}
# full axis labels
{
par(mfrow = c(3, 3))
plot(Cs[1:nSim], v, xlab = "Stimulus Distinctness", ylab = "Drift Rate")
plot(hs[1:nSim], v, xlab = "Detection Box Size", ylab = "Drift Rate")
plot(Ters[1:nSim], v, xlab = "Non-decision Time", ylab = "Drift Rate")
plot(Cs[1:nSim], a, xlab = "Stimulus Distinctness", ylab = "Boundary Seperation")
plot(hs[1:nSim], a, xlab = "Detection Box Size", ylab = "Boundary Seperation")
plot(Ters[1:nSim], a, xlab = "Non-decision Time", ylab = "Boundary Seperation")
plot(Cs[1:nSim], t0, xlab = "Stimulus Distinctness", ylab = "Non-decision Time")
plot(hs[1:nSim], t0, xlab = "Detection Box Size", ylab = "Non-decision Time")
plot(Ters[1:nSim], t0, xlab = "Non-decision Time", ylab = "Non-decision Time")
}
# grid uniform initialization of C, Ter, and h
nSim <- 30
n_trials <- 500
a <-c()
v <- c()
t0 <- c()
Cs <- runif(nSim,0.01,1)
hs <- runif(nSim,0.2,0.6)
Ters <- runif(nSim,0.2,0.8)
plot(0,0, xlim = c(0,1), ylim = c(0,15), col = "white",
xlab = "Stimulus Distinctness", ylab = "Drift Rate")
for (i in 1:nSim){
cat("simulation trial", i, ". ")
start_time <- Sys.time()
DDM_fit_results <- IDM_DDM(n_trials = n_trials, C=Cs[i], Ter=Ters[i], h=hs[i], D = 0.05, mode = "Euler-Maruyama")
DDM_fit_params <- DDM_fit_results$par
if(DDM_fit_results$convergence == 0){
points(Cs[i], DDM_fit_params["v"]) # plot one point to see online pattern
a <- c(a, as.numeric(DDM_fit_params["a"]))
v <- c(v, as.numeric(DDM_fit_params["v"]))
t0 <- c(t0, as.numeric(DDM_fit_params["t0"]))
}else if(DDM_fit_results$convergence != 0){
print("Failed convergence")
}
print(Sys.time() - start_time)
}
# full axis labels
{
par(mfrow = c(3, 3))
plot(Cs[1:nSim], v, xlab = "Stimulus Distinctness", ylab = "Drift Rate")
plot(hs[1:nSim], v, xlab = "Detection Box Size", ylab = "Drift Rate")
plot(Ters[1:nSim], v, xlab = "Non-decision Time", ylab = "Drift Rate")
plot(Cs[1:nSim], a, xlab = "Stimulus Distinctness", ylab = "Boundary Seperation")
plot(hs[1:nSim], a, xlab = "Detection Box Size", ylab = "Boundary Seperation")
plot(Ters[1:nSim], a, xlab = "Non-decision Time", ylab = "Boundary Seperation")
plot(Cs[1:nSim], t0, xlab = "Stimulus Distinctness", ylab = "Non-decision Time")
plot(hs[1:nSim], t0, xlab = "Detection Box Size", ylab = "Non-decision Time")
plot(Ters[1:nSim], t0, xlab = "Non-decision Time", ylab = "Non-decision Time")
}
# grid uniform initialization of C, Ter, and h
nSim <- 30
n_trials <- 500
a <-c()
v <- c()
t0 <- c()
Cs <- runif(nSim,0.01,0.5)
hs <- runif(nSim,0.2,0.6)
Ters <- runif(nSim,0.2,0.8)
plot(0,0, xlim = c(0,1), ylim = c(0,15), col = "white",
xlab = "Stimulus Distinctness", ylab = "Drift Rate")
for (i in 1:nSim){
cat("simulation trial", i, ". ")
start_time <- Sys.time()
DDM_fit_results <- IDM_DDM(n_trials = n_trials, C=Cs[i], Ter=Ters[i], h=hs[i], D = 0.05, mode = "Euler-Maruyama")
DDM_fit_params <- DDM_fit_results$par
if(DDM_fit_results$convergence == 0){
points(Cs[i], DDM_fit_params["v"]) # plot one point to see online pattern
a <- c(a, as.numeric(DDM_fit_params["a"]))
v <- c(v, as.numeric(DDM_fit_params["v"]))
t0 <- c(t0, as.numeric(DDM_fit_params["t0"]))
}else if(DDM_fit_results$convergence != 0){
print("Failed convergence")
}
print(Sys.time() - start_time)
}
# full axis labels
{
par(mfrow = c(3, 3))
plot(Cs[1:nSim], v, xlab = "Stimulus Distinctness", ylab = "Drift Rate")
plot(hs[1:nSim], v, xlab = "Detection Box Size", ylab = "Drift Rate")
plot(Ters[1:nSim], v, xlab = "Non-decision Time", ylab = "Drift Rate")
plot(Cs[1:nSim], a, xlab = "Stimulus Distinctness", ylab = "Boundary Seperation")
plot(hs[1:nSim], a, xlab = "Detection Box Size", ylab = "Boundary Seperation")
plot(Ters[1:nSim], a, xlab = "Non-decision Time", ylab = "Boundary Seperation")
plot(Cs[1:nSim], t0, xlab = "Stimulus Distinctness", ylab = "Non-decision Time")
plot(hs[1:nSim], t0, xlab = "Detection Box Size", ylab = "Non-decision Time")
plot(Ters[1:nSim], t0, xlab = "Non-decision Time", ylab = "Non-decision Time")
}
# grid uniform initialization of C, Ter, and h
nSim <- 30
n_trials <- 250
a <-c()
v <- c()
t0 <- c()
Cs <- runif(nSim,0.01,0.5)
hs <- runif(nSim,0.2,0.6)
Ters <- runif(nSim,0.2,0.8)
plot(0,0, xlim = c(0,1), ylim = c(0,15), col = "white",
xlab = "Stimulus Distinctness", ylab = "Drift Rate")
for (i in 1:nSim){
cat("simulation trial", i, ". ")
start_time <- Sys.time()
DDM_fit_results <- IDM_DDM(n_trials = n_trials, C=Cs[i], Ter=Ters[i], h=hs[i], D = 0.05, mode = "Euler-Maruyama")
DDM_fit_params <- DDM_fit_results$par
if(DDM_fit_results$convergence == 0){
points(Cs[i], DDM_fit_params["v"]) # plot one point to see online pattern
a <- c(a, as.numeric(DDM_fit_params["a"]))
v <- c(v, as.numeric(DDM_fit_params["v"]))
t0 <- c(t0, as.numeric(DDM_fit_params["t0"]))
}else if(DDM_fit_results$convergence != 0){
print("Failed convergence")
}
print(Sys.time() - start_time)
}
# full axis labels
{
par(mfrow = c(3, 3))
plot(Cs[1:nSim], v, xlab = "Stimulus Distinctness", ylab = "Drift Rate")
plot(hs[1:nSim], v, xlab = "Detection Box Size", ylab = "Drift Rate")
plot(Ters[1:nSim], v, xlab = "Non-decision Time", ylab = "Drift Rate")
plot(Cs[1:nSim], a, xlab = "Stimulus Distinctness", ylab = "Boundary Seperation")
plot(hs[1:nSim], a, xlab = "Detection Box Size", ylab = "Boundary Seperation")
plot(Ters[1:nSim], a, xlab = "Non-decision Time", ylab = "Boundary Seperation")
plot(Cs[1:nSim], t0, xlab = "Stimulus Distinctness", ylab = "Non-decision Time")
plot(hs[1:nSim], t0, xlab = "Detection Box Size", ylab = "Non-decision Time")
plot(Ters[1:nSim], t0, xlab = "Non-decision Time", ylab = "Non-decision Time")
}
# grid uniform initialization of C, Ter, and h
nSim <- 30
n_trials <- 250
a <-c()
v <- c()
t0 <- c()
Cs <- runif(nSim,0.01,0.5)
hs <- runif(nSim,0.2,0.6)
Ters <- runif(nSim,0.2,0.8)
plot(0,0, xlim = c(0,1), ylim = c(0,15), col = "white",
xlab = "Stimulus Distinctness", ylab = "Drift Rate")
for (i in 1:nSim){
cat("simulation trial", i, ". ")
start_time <- Sys.time()
DDM_fit_results <- IDM_DDM(n_trials = n_trials, C=Cs[i], Ter=Ters[i], h=hs[i], D = 0.05, mode = "Euler-Maruyama")
DDM_fit_params <- DDM_fit_results$par
if(DDM_fit_results$convergence == 0){
points(Cs[i], DDM_fit_params["v"]) # plot one point to see online pattern
a <- c(a, as.numeric(DDM_fit_params["a"]))
v <- c(v, as.numeric(DDM_fit_params["v"]))
t0 <- c(t0, as.numeric(DDM_fit_params["t0"]))
}else if(DDM_fit_results$convergence != 0){
print("Failed convergence")
}
print(Sys.time() - start_time)
}
# full axis labels
{
par(mfrow = c(3, 3))
plot(Cs[1:nSim], v, xlab = "Stimulus Distinctness", ylab = "Drift Rate")
plot(hs[1:nSim], v, xlab = "Detection Box Size", ylab = "Drift Rate")
plot(Ters[1:nSim], v, xlab = "Non-decision Time", ylab = "Drift Rate")
plot(Cs[1:nSim], a, xlab = "Stimulus Distinctness", ylab = "Boundary Seperation")
plot(hs[1:nSim], a, xlab = "Detection Box Size", ylab = "Boundary Seperation")
plot(Ters[1:nSim], a, xlab = "Non-decision Time", ylab = "Boundary Seperation")
plot(Cs[1:nSim], t0, xlab = "Stimulus Distinctness", ylab = "Non-decision Time")
plot(hs[1:nSim], t0, xlab = "Detection Box Size", ylab = "Non-decision Time")
plot(Ters[1:nSim], t0, xlab = "Non-decision Time", ylab = "Non-decision Time")
}
# grid uniform initialization of C, Ter, and h
nSim <- 30
n_trials <- 250
a <-c()
v <- c()
t0 <- c()
Cs <- runif(nSim,0.01,0.5)
hs <- runif(nSim,0.2,0.6)
Ters <- runif(nSim,0.2,0.8)
plot(0,0, xlim = c(0,1), ylim = c(0,5), col = "white",
xlab = "Stimulus Distinctness", ylab = "Drift Rate")
for (i in 1:nSim){
cat("simulation trial", i, ". ")
start_time <- Sys.time()
DDM_fit_results <- IDM_DDM(n_trials = n_trials, C=Cs[i], Ter=Ters[i], h=hs[i], D = 0.05, mode = "Euler-Maruyama")
DDM_fit_params <- DDM_fit_results$par
if(DDM_fit_results$convergence == 0){
points(Cs[i], DDM_fit_params["v"]) # plot one point to see online pattern
a <- c(a, as.numeric(DDM_fit_params["a"]))
v <- c(v, as.numeric(DDM_fit_params["v"]))
t0 <- c(t0, as.numeric(DDM_fit_params["t0"]))
}else if(DDM_fit_results$convergence != 0){
print("Failed convergence")
}
print(Sys.time() - start_time)
}
# full axis labels
{
par(mfrow = c(3, 3))
plot(Cs[1:nSim], v, xlab = "Stimulus Distinctness", ylab = "Drift Rate")
plot(hs[1:nSim], v, xlab = "Detection Box Size", ylab = "Drift Rate")
plot(Ters[1:nSim], v, xlab = "Non-decision Time", ylab = "Drift Rate")
plot(Cs[1:nSim], a, xlab = "Stimulus Distinctness", ylab = "Boundary Seperation")
plot(hs[1:nSim], a, xlab = "Detection Box Size", ylab = "Boundary Seperation")
plot(Ters[1:nSim], a, xlab = "Non-decision Time", ylab = "Boundary Seperation")
plot(Cs[1:nSim], t0, xlab = "Stimulus Distinctness", ylab = "Non-decision Time")
plot(hs[1:nSim], t0, xlab = "Detection Box Size", ylab = "Non-decision Time")
plot(Ters[1:nSim], t0, xlab = "Non-decision Time", ylab = "Non-decision Time")
}
# grid uniform initialization of C, Ter, and h
nSim <- 30
n_trials <- 500
a <-c()
v <- c()
t0 <- c()
Cs <- runif(nSim,0.01,0.5)
hs <- runif(nSim,0.2,0.6)
Ters <- runif(nSim,0.2,0.8)
plot(0,0, xlim = c(0,0.5), ylim = c(0,5), col = "white",
xlab = "Stimulus Distinctness", ylab = "Drift Rate")
for (i in 1:nSim){
cat("simulation trial", i, ". ")
start_time <- Sys.time()
DDM_fit_results <- IDM_DDM(n_trials = n_trials, C=Cs[i], Ter=Ters[i], h=hs[i], D = 0.05, mode = "Euler-Maruyama")
DDM_fit_params <- DDM_fit_results$par
if(DDM_fit_results$convergence == 0){
points(Cs[i], DDM_fit_params["v"]) # plot one point to see online pattern
a <- c(a, as.numeric(DDM_fit_params["a"]))
v <- c(v, as.numeric(DDM_fit_params["v"]))
t0 <- c(t0, as.numeric(DDM_fit_params["t0"]))
}else if(DDM_fit_results$convergence != 0){
print("Failed convergence")
}
print(Sys.time() - start_time)
}
# full axis labels
{
par(mfrow = c(3, 3))
plot(Cs[1:nSim], v, xlab = "Stimulus Distinctness", ylab = "Drift Rate")
plot(hs[1:nSim], v, xlab = "Detection Box Size", ylab = "Drift Rate")
plot(Ters[1:nSim], v, xlab = "Non-decision Time", ylab = "Drift Rate")
plot(Cs[1:nSim], a, xlab = "Stimulus Distinctness", ylab = "Boundary Seperation")
plot(hs[1:nSim], a, xlab = "Detection Box Size", ylab = "Boundary Seperation")
plot(Ters[1:nSim], a, xlab = "Non-decision Time", ylab = "Boundary Seperation")
plot(Cs[1:nSim], t0, xlab = "Stimulus Distinctness", ylab = "Non-decision Time")
plot(hs[1:nSim], t0, xlab = "Detection Box Size", ylab = "Non-decision Time")
plot(Ters[1:nSim], t0, xlab = "Non-decision Time", ylab = "Non-decision Time")
}
# grid uniform initialization of C, Ter, and h
nSim <- 30
n_trials <- 250
a <-c()
v <- c()
t0 <- c()
Cs <- runif(nSim,0.01,0.5)
hs <- runif(nSim,0.2,0.6)
Ters <- runif(nSim,0.2,0.8)
plot(0,0, xlim = c(0,0.5), ylim = c(0,5), col = "white",
xlab = "Stimulus Distinctness", ylab = "Drift Rate")
for (i in 1:nSim){
cat("simulation trial", i, ". ")
start_time <- Sys.time()
DDM_fit_results <- IDM_DDM(n_trials = n_trials, C=Cs[i], Ter=Ters[i], h=hs[i], D = 0.05, mode = "Euler-Maruyama")
DDM_fit_params <- DDM_fit_results$par
if(DDM_fit_results$convergence == 0){
points(Cs[i], DDM_fit_params["v"]) # plot one point to see online pattern
a <- c(a, as.numeric(DDM_fit_params["a"]))
v <- c(v, as.numeric(DDM_fit_params["v"]))
t0 <- c(t0, as.numeric(DDM_fit_params["t0"]))
}else if(DDM_fit_results$convergence != 0){
print("Failed convergence")
}
print(Sys.time() - start_time)
}
# full axis labels
{
par(mfrow = c(3, 3))
plot(Cs[1:nSim], v, xlab = "Stimulus Distinctness", ylab = "Drift Rate")
plot(hs[1:nSim], v, xlab = "Detection Box Size", ylab = "Drift Rate")
plot(Ters[1:nSim], v, xlab = "Non-decision Time", ylab = "Drift Rate")
plot(Cs[1:nSim], a, xlab = "Stimulus Distinctness", ylab = "Boundary Seperation")
plot(hs[1:nSim], a, xlab = "Detection Box Size", ylab = "Boundary Seperation")
plot(Ters[1:nSim], a, xlab = "Non-decision Time", ylab = "Boundary Seperation")
plot(Cs[1:nSim], t0, xlab = "Stimulus Distinctness", ylab = "Non-decision Time")
plot(hs[1:nSim], t0, xlab = "Detection Box Size", ylab = "Non-decision Time")
plot(Ters[1:nSim], t0, xlab = "Non-decision Time", ylab = "Non-decision Time")
}
# grid uniform initialization of C, Ter, and h
nSim <- 30
n_trials <- 500
a <-c()
v <- c()
t0 <- c()
Cs <- runif(nSim,0.01,0.5)
hs <- runif(nSim,0.2,0.6)
Ters <- runif(nSim,0.2,0.8)
plot(0,0, xlim = c(0,0.5), ylim = c(0,5), col = "white",
xlab = "Stimulus Distinctness", ylab = "Drift Rate")
for (i in 1:nSim){
cat("simulation trial", i, ". ")
start_time <- Sys.time()
DDM_fit_results <- IDM_DDM(n_trials = n_trials, C=Cs[i], Ter=Ters[i], h=hs[i], D = 0.05, mode = "Euler-Maruyama")
DDM_fit_params <- DDM_fit_results$par
if(DDM_fit_results$convergence == 0){
points(Cs[i], DDM_fit_params["v"]) # plot one point to see online pattern
a <- c(a, as.numeric(DDM_fit_params["a"]))
v <- c(v, as.numeric(DDM_fit_params["v"]))
t0 <- c(t0, as.numeric(DDM_fit_params["t0"]))
}else if(DDM_fit_results$convergence != 0){
print("Failed convergence")
}
print(Sys.time() - start_time)
}
# full axis labels
{
par(mfrow = c(3, 3))
plot(Cs[1:nSim], v, xlab = "Stimulus Distinctness", ylab = "Drift Rate")
plot(hs[1:nSim], v, xlab = "Detection Box Size", ylab = "Drift Rate")
plot(Ters[1:nSim], v, xlab = "Non-decision Time", ylab = "Drift Rate")
plot(Cs[1:nSim], a, xlab = "Stimulus Distinctness", ylab = "Boundary Seperation")
plot(hs[1:nSim], a, xlab = "Detection Box Size", ylab = "Boundary Seperation")
plot(Ters[1:nSim], a, xlab = "Non-decision Time", ylab = "Boundary Seperation")
plot(Cs[1:nSim], t0, xlab = "Stimulus Distinctness", ylab = "Non-decision Time")
plot(hs[1:nSim], t0, xlab = "Detection Box Size", ylab = "Non-decision Time")
plot(Ters[1:nSim], t0, xlab = "Non-decision Time", ylab = "Non-decision Time")
}
